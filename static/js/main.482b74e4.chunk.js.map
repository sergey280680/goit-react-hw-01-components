{"version":3,"sources":["components/UserCard/UserCard.styled.jsx","components/UserCard/UserCard.jsx","components/UserBoard/UserBoard.styled.jsx","components/UserBoard/UserBoard.jsx","components/utils/randomColor.js","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/Transactions/Transactions.styled.jsx","components/Transactions/Transactions.jsx","components/FriendCard/FriendCard.styled.jsx","components/FriendCard/FriendCard.jsx","components/FriendsBoard/FriendsBoard.styled.jsx","components/FriendsBoard/FriendsBoard.jsx","components/App/App.styled.jsx","components/App/App.jsx","components/constants/theme.js","index.js"],"names":["CardProfile","styled","div","props","theme","colors","bgCardProfile","Description","Name","p","Tag","location","Location","StatusList","ul","bgStatusUser","StatusItem","li","Label","span","UserCard","name","tag","avatar","followers","views","likes","src","alt","BoardUser","bgBoardUser","UserBoard","event","stats","randomColor","r","Math","floor","random","g","b","Wrapper","section","bgStatistics","TitleStatistics","h2","StatisticsList","ItemStatistic","Statistics","title","items","map","id","label","percentage","style","backgroundColor","Table","table","bgTransactionsTable","StringTable","tr","bgStringTable","Transactions","events","type","amount","currency","Card","bgCardFriend","Avatar","img","bgAvatar","UserName","OnLineStatus","status","FriendCard","isOnline","BoardList","bgBoardFriends","FriendsBoard","Container","App","friends","statisticalData","transactions","user","Object","freeze","white","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.482b74e4.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const CardProfile = styled.div`\r\n  width: fit-content;\r\n  background-color: ${(props) => props.theme.colors.bgCardProfile};\r\n  border: solid 1px black;\r\n  margin: 50px auto;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  text-align: center;\r\n  margin: 30px;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  margin: 20px 0 5px;\r\n`;\r\n\r\nexport const Tag = styled.p`\r\n  color: ${(props) => props.theme.colors.location};\r\n`;\r\n\r\nexport const Location = styled.p`\r\n  margin-top: 3px;\r\n  color: ${(props) => props.theme.colors.location};\r\n`;\r\n\r\nexport const StatusList = styled.ul`\r\n  background-color: ${(props) => props.theme.colors.bgStatusUser};\r\n  list-style-type: none;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 22px;\r\n`;\r\n\r\nexport const StatusItem = styled.li`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  font-size: 19px;\r\n  font-weight: 600;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport {\r\n  CardProfile,\r\n  Description,\r\n  Name,\r\n  Tag,\r\n  Location,\r\n  StatusList,\r\n  StatusItem,\r\n  Label,\r\n} from \"./UserCard.styled\";\r\n\r\nexport const UserCard = ({\r\n  name,\r\n  tag,\r\n  location,\r\n  avatar,\r\n  followers,\r\n  views,\r\n  likes,\r\n}) => {\r\n  return (\r\n    <CardProfile>\r\n      <Description>\r\n        <img src={avatar} alt=\"Аватар пользователя\" />\r\n        <Name>{name}</Name>\r\n        <Tag>@{tag}</Tag>\r\n        <Location>{location}</Location>\r\n      </Description>\r\n\r\n      <StatusList>\r\n        <StatusItem>\r\n          <Label>Follwers</Label>\r\n          <span>{followers}</span>\r\n        </StatusItem>\r\n        <StatusItem>\r\n          <Label>View</Label>\r\n          <span>{views}</span>\r\n        </StatusItem>\r\n        <StatusItem>\r\n          <Label>Like</Label>\r\n          <span>{likes}</span>\r\n        </StatusItem>\r\n      </StatusList>\r\n    </CardProfile>\r\n  );\r\n};\r\n\r\nUserCard.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  followers: PropTypes.number.isRequired,\r\n  views: PropTypes.number.isRequired,\r\n  likes: PropTypes.number.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const BoardUser = styled.div`\r\n  padding: 25px 100px;\r\n  background-color: ${(props) => props.theme.colors.bgBoardUser};\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { UserCard } from \"components/UserCard/UserCard\";\r\nimport { BoardUser } from \"./UserBoard.styled\";\r\n\r\nexport const UserBoard = ({ event }) => {\r\n  return (\r\n    <BoardUser>\r\n      <UserCard\r\n        name={event.name}\r\n        tag={event.tag}\r\n        location={event.location}\r\n        avatar={event.avatar}\r\n        followers={event.stats.followers}\r\n        views={event.stats.views}\r\n        likes={event.stats.likes}\r\n      />\r\n    </BoardUser>\r\n  );\r\n};\r\n\r\nUserBoard.propTypes = {\r\n  event: PropTypes.exact({\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.exact({\r\n      followers: PropTypes.number.isRequired,\r\n      views: PropTypes.number.isRequired,\r\n      likes: PropTypes.number.isRequired,\r\n    }),\r\n  }),\r\n};\r\n","export const randomColor = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r} ${g} ${b}) `;\n};\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.section`\r\n  background-color: ${(props) => props.theme.colors.bgStatistics};\r\n  width: fit-content;\r\n  margin: 20px auto;\r\n`;\r\n\r\nexport const TitleStatistics = styled.h2`\r\n  text-align: center;\r\n  line-height: 60px;\r\n`;\r\n\r\nexport const StatisticsList = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nexport const ItemStatistic = styled.li`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 17px;\r\n  background-color: aqua;\r\n  color: white;\r\n`;\r\n","import { randomColor } from \"components/utils\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  StatisticsList,\r\n  Wrapper,\r\n  TitleStatistics,\r\n  ItemStatistic,\r\n} from \"./Statistics.styled\";\r\n\r\nexport const Statistics = ({ title, items }) => {\r\n  return (\r\n    <Wrapper>\r\n      {title && <TitleStatistics>{title}</TitleStatistics>}\r\n\r\n      <StatisticsList>\r\n        {items.map(({ id, label, percentage }) => (\r\n          <ItemStatistic key={id} style={{ backgroundColor: randomColor() }}>\r\n            <span>{label}</span>\r\n            <span>{percentage}</span>\r\n          </ItemStatistic>\r\n        ))}\r\n      </StatisticsList>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Table = styled.table`\r\n  background-color: ${(props) => props.theme.colors.bgTransactionsTable};\r\n  width: 700px;\r\n  margin: 10px auto;\r\n`;\r\n\r\nexport const StringTable = styled.tr`\r\n  text-align: center;\r\n  height: 50px;\r\n  background-color: ${(props) => props.theme.colors.bgStringTable};\r\n`;\r\n","//\r\nimport PropTypes from \"prop-types\";\r\nimport { Table, StringTable } from \"./Transactions.styled\";\r\n\r\nexport const Transactions = ({ events }) => {\r\n  return (\r\n    <Table>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {events.map(({ id, type, amount, currency }) => (\r\n          <StringTable key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n          </StringTable>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nTransactions.propTypes = {\r\n  events: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Card = styled.li`\r\n  background-color: ${(props) => props.theme.colors.bgCardFriend};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  border: solid 1px black;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 10px rgb(0 0 0 / 50%);\r\n  padding: 10px;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n  background-color: ${(props) => props.theme.colors.bgAvatar};\r\n  border-radius: 5px;\r\n  border: solid 1px black;\r\n  margin-right: 10px;\r\n  width: 48px;\r\n`;\r\n\r\nexport const UserName = styled.p`\r\n  font-size: 25px;\r\n`;\r\n\r\nexport const OnLineStatus = styled.span`\r\n  width: 15px;\r\n  height: 15px;\r\n  margin-right: 10px;\r\n  border-radius: 10px;\r\n\r\n  background-color: ${(props) => {\r\n    if (props.status) {\r\n      return `green`;\r\n    }\r\n    return `red`;\r\n  }};\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { Card, Avatar, UserName, OnLineStatus } from \"./FriendCard.styled\";\r\n\r\nexport const FriendCard = ({ avatar, name, isOnline }) => {\r\n  return (\r\n    <Card>\r\n      <OnLineStatus status={isOnline}></OnLineStatus>\r\n      <Avatar src={avatar} alt={name} />\r\n      <UserName>{name}</UserName>\r\n    </Card>\r\n  );\r\n};\r\n\r\nFriendCard.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const BoardList = styled.ul`\r\n  background-color: ${(props) => props.theme.colors.bgBoardFriends};\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(227px, auto));\r\n\r\n  gap: 31px;\r\n  padding: 20px 40px;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { FriendCard } from \"components/FriendCard/FriendCard\";\r\nimport { BoardList } from \"./FriendsBoard.styled\";\r\n\r\nexport const FriendsBoard = ({ events }) => {\r\n  return (\r\n    <BoardList>\r\n      {events.map(({ avatar, name, isOnline, id }) => (\r\n        <FriendCard\r\n          key={id}\r\n          avatar={avatar}\r\n          name={name}\r\n          isOnline={isOnline}\r\n          id={id}\r\n        />\r\n      ))}\r\n    </BoardList>\r\n  );\r\n};\r\n\r\nFriendsBoard.propTypes = {\r\n  events: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  background-color: rgba(43, 255, 0, 0.487);\r\n`;\r\n","import friends from \"friends.json\";\r\nimport { UserBoard } from \"components/UserBoard/UserBoard\";\r\nimport statisticalData from \"statistical-data.json\";\r\nimport { Statistics } from \"components/Statistics/Statistics\";\r\nimport transactions from \"transaction-history.json\";\r\nimport { Transactions } from \"components/Transactions/Transactions\";\r\nimport user from \"user.json\";\r\nimport { FriendsBoard } from \"components/FriendsBoard/FriendsBoard\";\r\nimport { Container } from \"./App.styled\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Container>\r\n      <FriendsBoard events={friends} />\r\n      <Statistics title=\"Upload stats\" items={statisticalData} />\r\n      <Transactions events={transactions} />\r\n      <UserBoard event={user} />\r\n    </Container>\r\n  );\r\n};\r\n","export const theme = Object.freeze({\n  colors: {\n    white: \"#ffffff\",\n    bgAvatar: \"#3cbfecb0\",\n    bgCardFriend: \"#e8e8e8\",\n    bgBoardFriends: \"rgba(242, 255, 4, 0.576)\",\n    bgStatistics: \"rgb(204, 131, 211)\",\n    bgTransactionsTable: \"rgba(47, 0, 255, 0.33)\",\n    bgStringTable: \"#42e2b3bf\",\n    bgBoardUser: \" rgb(47 25 95 / 50%)\",\n    bgCardProfile: \"rgba(179, 154, 237, 0.796)\",\n    bgStatusUser: \"#d2c8a3\",\n    location: \"#4a3c3c\",\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport \"./index.css\";\nimport { App } from \"components/App/App\";\nimport { theme } from \"components/constants/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}